
DROP TABLE LOCATIONS;
DROP TABLE NODES;
DROP TABLE NODE_TO_LOCATION;
DROP TABLE SENSOR_VALUE_STREAMS;
DROP TABLE MEASUREMENTS;
DROP TABLE SENSING_TARGETS;
DROP TABLE SENSOR_INFOS;
DROP TABLE SUBSCRIBERS;
DROP TABLE SENSOR_VALUE_LOGS;

CREATE TABLE LOCATIONS (
	id IDENTITY PRIMARY KEY,
	geom GEOMETRY NOT NULL,
	ts TIMESTAMP DEFAULT NOW()
);

INSERT INTO LOCATIONS VALUES (default, 'POINT (100 50)', default);
INSERT INTO LOCATIONS VALUES (default, 'POINT (200 550)', default);

CREATE TABLE NODES (
	id IDENTITY PRIMARY KEY,
	desc VARCHAR(512),
);

INSERT INTO NODES VALUES (default, 'Basic Arduino Board (Light, Temperature, Humidity)');
INSERT INTO NODES VALUES (default, 'Basic Arduino Board (Light, Temperature, Humidity)');

CREATE TABLE NODE_TO_LOCATION (
	node BIGINT NOT NULL,
	loc BIGINT NOT NULL,

	PRIMARY KEY (node, loc),
	FOREIGN KEY(node) REFERENCES NODES(id) ON DELETE CASCADE,
	FOREIGN KEY(loc) REFERENCES LOCATIONS(id) ON DELETE CASCADE
);

INSERT INTO NODE_TO_LOCATION VALUES (1, 1);
INSERT INTO NODE_TO_LOCATION VALUES (2, 2);

CREATE TABLE MEASUREMENTS (
	id IDENTITY PRIMARY KEY,
	urn VARCHAR(128) NOT NULL,
	unit VARCHAR(32) NOT NULL
);

INSERT INTO MEASUREMENTS VALUES (default, 'urn:light_intensity', 'Lux');
INSERT INTO MEASUREMENTS VALUES (default, 'urn:temperature', 'Celsius');
INSERT INTO MEASUREMENTS VALUES (default, 'urn:humidity', 'RH');
INSERT INTO MEASUREMENTS VALUES (default, 'urn:gas', 'ppm');

CREATE TABLE SENSING_TARGETS (
	id IDENTITY PRIMARY KEY,
	geom GEOMETRY NOT NULL,
	desc VARCHAR(512)
);
INSERT INTO SENSING_TARGETS VALUES (default, 'POINT (100 50)', default);
INSERT INTO SENSING_TARGETS VALUES (default, 'POINT (200 550)', default);

CREATE TABLE SENSOR_VALUE_STREAMS (
	id IDENTITY PRIMARY KEY,
	node BIGINT NOT NULL,
	measurement BIGINT NOT NULL,
	desc VARCHAR(512),

	FOREIGN KEY(node) REFERENCES NODES(id) ON DELETE CASCADE,
	FOREIGN KEY(measurement) REFERENCES MEASUREMENTS(id) ON DELETE CASCADE,
);

INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 1, 1, 'Light level');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 1, 1, 'Temperature');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 1, 1, 'Humidity level');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 1, 1, 'Gas level');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 2, 1, 'Light level');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 2, 1, 'Temperature');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 2, 1, 'Humidity level');
INSERT INTO SENSOR_VALUE_STREAMS VALUES (default, 2, 1, 'Gas level');

CREATE TABLE SENSOR_INFOS (
	id IDENTITY PRIMARY KEY,
	meta VARCHAR(256)
);
INSERT INTO SENSOR_INFOS VALUES (default, 'LIGHT_0 Light Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'CHIPCAP-L/Module Temperature Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'CHIPCAP-L/Module Humidity Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'MQ-5 Gas Sensor (100~3000)');
INSERT INTO SENSOR_INFOS VALUES (default, 'LIGHT_0 Light Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'CHIPCAP-L/Module Temperature Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'CHIPCAP-L/Module Humidity Sensor');
INSERT INTO SENSOR_INFOS VALUES (default, 'MQ-5 Gas Sensor (100~3000)');

CREATE TABLE SUBSCRIBERS (
	id IDENTITY PRIMARY KEY,
	channel VARCHAR(128) NOT NULL,
	stream BIGINT NOT NULL,
	sensor BIGINT NOT NULL,
	target BIGINT NOT NULL,

	FOREIGN KEY(stream) REFERENCES SENSOR_VALUE_STREAMS(id),
);
INSERT INTO SUBSCRIBERS VALUES (default, 'DE:AD:BE:EF:FE:ED/a0', 1, 1, 1);
INSERT INTO SUBSCRIBERS VALUES (default, 'DE:AD:BE:EF:FE:ED/a1', 2, 2, 1);
INSERT INTO SUBSCRIBERS VALUES (default, 'DE:AD:BE:EF:FE:ED/a2', 3, 3, 1);
INSERT INTO SUBSCRIBERS VALUES (default, 'DE:AD:BE:EF:FE:ED/a3', 4, 4, 1);
INSERT INTO SUBSCRIBERS VALUES (default, '90:A2:DA:0F:EC:F1/a0', 5, 1, 2);
INSERT INTO SUBSCRIBERS VALUES (default, '90:A2:DA:0F:EC:F1/a1', 6, 2, 2);
INSERT INTO SUBSCRIBERS VALUES (default, '90:A2:DA:0F:EC:F1/a2', 7, 3, 2);
INSERT INTO SUBSCRIBERS VALUES (default, '90:A2:DA:0F:EC:F1/a3', 8, 4, 2);

CREATE TABLE SENSOR_VALUE_LOGS (
	id IDENTITY PRIMARY KEY,
	sensor BIGINT NOT NULL,
	stream BIGINT NOT NULL,
	target BIGINT NOT NULL,
	type VARCHAR(64),
	value INT,
	ts TIMESTAMP DEFAULT NOW(),

	FOREIGN KEY(sensor) REFERENCES SENSOR_INFOS(id) ON DELETE CASCADE,
	FOREIGN KEY(stream) REFERENCES SENSOR_VALUE_STREAMS(id) ON DELETE CASCADE,
	FOREIGN KEY(target) REFERENCES SENSING_TARGETS(id) ON DELETE CASCADE,
);